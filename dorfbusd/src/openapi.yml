openapi: "3.0.2"
info:
  title: DorfbusD
  version: "1.0"
  license:
    name: MIT
    url: https://github.com/rappet/dorfbusd/blob/main/LICENSE
  contact:
    name: Raphael Peters
    email: dorfbusd-openapi@rappet.de
    url: https://rappet.de/
  description: |

    Dorfbus managemeng deamon
servers:
  []
  # a localhost server will be added during runtime
paths:
  /api/swagger-ui:
    get:
      tags:
        - "human readable"
      description: "[Swagger-UI](/api/swagger-ui/)"
      responses:
        "200":
          description: OK
          content:
            text/html: {}
  /api/v1/config:
    get:
      tags:
        - "v1"
      description: "Modbus device configuration of the deamon"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/device"
  /api/v1/device-hardware-version/{device-id}:
    get:
      tags:
        - "v1"
      description: "Get the hardware version of a device"
      parameters:
        - name: device-id
          in: path
          description: Modbus ID of the device
          required: true
          schema:
            type: integer
            format: int8
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hardware-version:
                    type: integer
                    default: 104
                    description: "Hardware version of the device"

  /api/v1/set-coil/{device-id}/{coil}/{activate}:
    post:
      tags:
        - "v1"
      description: "Set the status of a coil"
      parameters:
        - name: device-id
          in: path
          description: Modbus ID of the device
          required: true
          schema:
            type: integer
            format: int8
        - name: coil
          in: path
          description: Number of the coil
          required: true
          schema:
            type: integer
            format: int16
            enum: [0, 1, 2, 3]
        - name: activate
          in: path
          description: True if the relay is activated
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    device:
      type: object
      properties:
        description:
          type: string
        modbus-address:
          type: integer
          description: Address of the modbus device
        coils:
          type: array
          description: List of coils the device might have
          items:
            $ref: "#/components/schemas/coil"
    coil:
      type: object
      properties:
        address:
          description: Address of the coil
          type: integer
        description:
          type: string
        default-status:
          $ref: "#/components/schemas/reset-coil-status"
    reset-coil-status:
      type: string
      description: Value a device should be set to if the device is reseted.
      enum: [on, off, do-not-set]
      default: do-not-set
